name: Deploy react app to EKS cluster
on:
  push:
    branches: [ "main" ]

jobs:
  loginToAws:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

  buildAndPushDockerImage:
    runs-on: ubuntu-latest
    needs: loginToAws
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to AWS ECR
      uses: docker/login-action@v3
      with:
        registry: 456840671316.dkr.ecr.us-east-1.amazonaws.com
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      env:
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build Docker image
      env:
        REGISTRY: ${{ secrets.AWS_ECR }}
        REPO: sri-test-react-app
        REPOSITORY_TAG: ${REGISTRY}/${REPO}:${GITHUB_RUN_NUMBER}
        
      run: |
        docker build -t ${REPO} .
        docker tag ${REPO}:latest ${REGISTRY}/${REPO}:${GITHUB_RUN_NUMBER}
        docker push ${REGISTRY}/${REPO}:${GITHUB_RUN_NUMBER}

  install_Kubectl:
    runs-on: ubuntu-latest
    needs: buildAndPushDockerImage
    steps:
    - name: Install kubectl
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/OS_DISTRIBUTION/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

  deployToEKS:
    runs-on: ubuntu-latest
    needs: install_Kubectl
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure Aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Download kubeconfig file
      run: |
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
        echo "Kubeconfig file downloaded successfully."

    - name: Deploy to EKS
      run: |
        sed -i "s|image: REPOSITORY_TAG|image: 456840671316.dkr.ecr.us-east-1.amazonaws.com/sri-test-react-app:$GITHUB_RUN_NUMBER|g" ./deployment.yml
        kubectl apply -f ./deployment.yml

